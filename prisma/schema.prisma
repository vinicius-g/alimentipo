// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Cliente {
    id_cliente          Int     @id @default(autoincrement())
    imagem_cliente      Bytes?
    tipo_imagem_cliente String?
    nome_cliente        String  @db.VarChar(100)
    nome_usuario        String  @db.VarChar(100)
    email_cliente       String  @unique @db.VarChar(100)
    senha_cliente       String  @db.Char(60)
    termos_condicoes    Int     @db.TinyInt

    produtos_favoritos Produtos_Clientes[]
    lojas_favoritas    Lojas_Clientes[]
}

model Loja {
    id_loja           Int     @id @default(autoincrement())
    cpf_loja          String  @unique @db.Char(11)
    imagem_loja       Bytes
    tipo_imagem_loja  String
    cnpj_loja         String? @unique @db.Char(14)
    nome_loja         String  @db.VarChar(100)
    nome_proprietario String  @db.VarChar(100)
    email_loja        String  @unique @db.VarChar(100)
    data_nascimento   Int
    senha_loja        String  @db.Char(60)
    link_loja         String? @db.VarChar(255)
    endereco_loja     String? @db.VarChar(255)
    telefone_loja     String  @db.Char(11)
    descricao_loja    String  @db.VarChar(200)
    online_fisica     String  @db.VarChar(15)
    premium           Int     @db.TinyInt @default(0)
    ranking_loja      Int     @default(1)
    termos_condicoes  Int     @db.TinyInt

    produtos             Produto[]
    clientes_favoritaram Lojas_Clientes[]
}

model Restricao {
    id_restricao   Int    @id @default(autoincrement())
    nome_restricao String @unique @db.VarChar(255)

    produtos Restricoes_Produtos[]
}

model Produto {
    id_produto          Int    @id @default(autoincrement())
    imagem_produto      Bytes
    tipo_imagem_produto String
    nome_produto        String @db.VarChar(100)
    descricao_produto   String @db.VarChar(200)
    link_produto        String @db.VarChar(255)
    preco_produto       Float
    estoque_produto     Int    @db.TinyInt
    ranking_produto     Int    @default(1)
    desconto_produto    Int?

    loja                 Loja                  @relation(fields: [loja_id], references: [id_loja], onDelete: Cascade, onUpdate: Cascade)
    loja_id              Int
    clientes_favoritaram Produtos_Clientes[]
    restricoes           Restricoes_Produtos[]
}

model Produtos_Clientes {
    produto    Produto  @relation(fields: [id_produto], references: [id_produto], onDelete: Cascade, onUpdate: Cascade)
    id_produto Int
    cliente    Cliente  @relation(fields: [id_cliente], references: [id_cliente], onDelete: Cascade, onUpdate: Cascade)
    id_cliente Int
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@id([id_produto, id_cliente])
}

model Lojas_Clientes {
    loja       Loja     @relation(fields: [id_loja], references: [id_loja], onDelete: Cascade, onUpdate: Cascade)
    id_loja    Int
    cliente    Cliente  @relation(fields: [id_cliente], references: [id_cliente], onDelete: Cascade, onUpdate: Cascade)
    id_cliente Int
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@id([id_loja, id_cliente])
}

model Restricoes_Produtos {
    produto      Produto   @relation(fields: [id_produto], references: [id_produto], onDelete: Cascade, onUpdate: Cascade)
    id_produto   Int
    restricao    Restricao @relation(fields: [id_restricao], references: [id_restricao], onDelete: Cascade, onUpdate: Cascade)
    id_restricao Int
    created_at   DateTime  @default(now())
    updated_at   DateTime  @updatedAt

    @@id([id_restricao, id_produto])
}
